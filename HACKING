== Guide to Hacking Gitorious

The quickest way to get a working Gitorious environment is to use the
installer, or one of the pre-built VMs available from http://getgitorious.org.

This file is in need of elaboration.

=== Tasks and other scripts

* rake db:setup creates the initial database tables

=== Coding style

* Two spaces, no tabs, for indention
* Don't use and and or for boolean tests, instead always use && and ||
* MyClass.my_method(my_arg) -- not my_method( my_arg ) or my_method my_arg
* Unless precedence is an issue; do .. end for multi-line blocks, braces for single line blocks
* Follow the conventions you see used in the source already

(copied mostly verbatim from dev.rubyonrails.org)

=== Branching model

Gitorious uses
[the git-flow branching model](http://nvie.com/posts/a-successful-git-branching-model/)
for branching. This means that the master branch is stable, and is
only merged to once a feature has been completed.

New features are created in feature branches (named `feature/$name`)
and then merged into the `next` branch once finished. Such features
arrive in `master` as new releases.

When contributing new features into Gitorious as merge requests, these
should be started the `next` branch, and marked as such when proposed.

The exception to this is hotfixes, which may be started from and
proposed merged into `master`. Please note that hotfixes should not
implement new functionality.
